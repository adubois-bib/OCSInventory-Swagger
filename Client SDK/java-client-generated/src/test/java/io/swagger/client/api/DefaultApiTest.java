/*
 * OCS Inventory Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.ComputerDetail;
import io.swagger.client.model.ComputersList;
import io.swagger.client.model.IpdiscoverList;
import io.swagger.client.model.IpdiscoverNetdevices;
import io.swagger.client.model.ListOfID;
import io.swagger.client.model.SNMPDetail;
import io.swagger.client.model.SNMPType;
import io.swagger.client.model.SoftwaresList;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get a computer by its ID
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void computerIdGetTest() throws Exception {
        Integer id = null;
        ComputersList response = api.computerIdGet(id);

        // TODO: test validations
    }
    /**
     * Get sections informations of a specific computer
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void computerIdSectionsGetTest() throws Exception {
        Integer id = null;
        String sections = null;
        String where = null;
        String operator = null;
        ComputerDetail response = api.computerIdSectionsGet(id, sections, where, operator);

        // TODO: test validations
    }
    /**
     * Get a list of computers with its detail
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void computersGetTest() throws Exception {
        Integer start = null;
        Integer limit = null;
        List<ComputersList> response = api.computersGet(start, limit);

        // TODO: test validations
    }
    /**
     * Get a ID list of computers update during the provided timestamp
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void computersLastupdateTimestampGetTest() throws Exception {
        Integer timestamp = null;
        List<ListOfID> response = api.computersLastupdateTimestampGet(timestamp);

        // TODO: test validations
    }
    /**
     * Get a ID list of all computers in the OCS database
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void computersListIDGetTest() throws Exception {
        Integer start = null;
        Integer limit = null;
        List<ListOfID> response = api.computersListIDGet(start, limit);

        // TODO: test validations
    }
    /**
     * List IPDiscover network list
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ipdiscoverGetTest() throws Exception {
        Integer start = null;
        Integer limit = null;
        IpdiscoverList response = api.ipdiscoverGet(start, limit);

        // TODO: test validations
    }
    /**
     * Get list of network devices scanned on one network
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void ipdiscoverNetworkNetidGetTest() throws Exception {
        Integer netid = null;
        IpdiscoverNetdevices response = api.ipdiscoverNetworkNetidGet(netid);

        // TODO: test validations
    }
    /**
     * Get snmp device list of a specific snmp type
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void snmpSnmpTypeGetTest() throws Exception {
        String snmpType = null;
        Integer start = null;
        Integer limit = null;
        SNMPDetail response = api.snmpSnmpTypeGet(snmpType, start, limit);

        // TODO: test validations
    }
    /**
     * Get a device from a snmp type with its ID
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void snmpSnmpTypeIdGetTest() throws Exception {
        String snmpType = null;
        Integer id = null;
        SNMPDetail response = api.snmpSnmpTypeIdGet(snmpType, id);

        // TODO: test validations
    }
    /**
     * Get a SNMP type list
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void snmpsTypeListGetTest() throws Exception {
        SNMPType response = api.snmpsTypeListGet();

        // TODO: test validations
    }
    /**
     * Get software list from database
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void softwaresGetTest() throws Exception {
        Integer start = null;
        Integer limit = null;
        String soft = null;
        SoftwaresList response = api.softwaresGet(start, limit, soft);

        // TODO: test validations
    }
}
