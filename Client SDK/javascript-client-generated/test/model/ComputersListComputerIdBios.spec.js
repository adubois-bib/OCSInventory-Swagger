/*
 * OCS Inventory Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OcsInventoryRestApi);
  }
}(this, function(expect, OcsInventoryRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ComputersListComputerIdBios', function() {
      beforeEach(function() {
        instance = new OcsInventoryRestApi.ComputersListComputerIdBios();
      });

      it('should create an instance of ComputersListComputerIdBios', function() {
        // TODO: update the code to test ComputersListComputerIdBios
        expect(instance).to.be.a(OcsInventoryRestApi.ComputersListComputerIdBios);
      });

      it('should have the property ASSETTAG (base name: "ASSETTAG")', function() {
        // TODO: update the code to test the property ASSETTAG
        expect(instance).to.have.property('ASSETTAG');
        // expect(instance.ASSETTAG).to.be(expectedValueLiteral);
      });

      it('should have the property BDATE (base name: "BDATE")', function() {
        // TODO: update the code to test the property BDATE
        expect(instance).to.have.property('BDATE');
        // expect(instance.BDATE).to.be(expectedValueLiteral);
      });

      it('should have the property BMANUFACTURER (base name: "BMANUFACTURER")', function() {
        // TODO: update the code to test the property BMANUFACTURER
        expect(instance).to.have.property('BMANUFACTURER');
        // expect(instance.BMANUFACTURER).to.be(expectedValueLiteral);
      });

      it('should have the property BVERSION (base name: "BVERSION")', function() {
        // TODO: update the code to test the property BVERSION
        expect(instance).to.have.property('BVERSION');
        // expect(instance.BVERSION).to.be(expectedValueLiteral);
      });

      it('should have the property HARDWARE_ID (base name: "HARDWARE_ID")', function() {
        // TODO: update the code to test the property HARDWARE_ID
        expect(instance).to.have.property('HARDWARE_ID');
        // expect(instance.HARDWARE_ID).to.be(expectedValueLiteral);
      });

      it('should have the property MMANUFACTURER (base name: "MMANUFACTURER")', function() {
        // TODO: update the code to test the property MMANUFACTURER
        expect(instance).to.have.property('MMANUFACTURER');
        // expect(instance.MMANUFACTURER).to.be(expectedValueLiteral);
      });

      it('should have the property MMODEL (base name: "MMODEL")', function() {
        // TODO: update the code to test the property MMODEL
        expect(instance).to.have.property('MMODEL');
        // expect(instance.MMODEL).to.be(expectedValueLiteral);
      });

      it('should have the property MSN (base name: "MSN")', function() {
        // TODO: update the code to test the property MSN
        expect(instance).to.have.property('MSN');
        // expect(instance.MSN).to.be(expectedValueLiteral);
      });

      it('should have the property SMANUFACTURER (base name: "SMANUFACTURER")', function() {
        // TODO: update the code to test the property SMANUFACTURER
        expect(instance).to.have.property('SMANUFACTURER');
        // expect(instance.SMANUFACTURER).to.be(expectedValueLiteral);
      });

      it('should have the property SMODEL (base name: "SMODEL")', function() {
        // TODO: update the code to test the property SMODEL
        expect(instance).to.have.property('SMODEL');
        // expect(instance.SMODEL).to.be(expectedValueLiteral);
      });

      it('should have the property SSN (base name: "SSN")', function() {
        // TODO: update the code to test the property SSN
        expect(instance).to.have.property('SSN');
        // expect(instance.SSN).to.be(expectedValueLiteral);
      });

      it('should have the property TYPE (base name: "TYPE")', function() {
        // TODO: update the code to test the property TYPE
        expect(instance).to.have.property('TYPE');
        // expect(instance.TYPE).to.be(expectedValueLiteral);
      });

    });
  });

}));
