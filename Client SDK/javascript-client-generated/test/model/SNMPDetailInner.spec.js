/*
 * OCS Inventory Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OcsInventoryRestApi);
  }
}(this, function(expect, OcsInventoryRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('SNMPDetailInner', function() {
      beforeEach(function() {
        instance = new OcsInventoryRestApi.SNMPDetailInner();
      });

      it('should create an instance of SNMPDetailInner', function() {
        // TODO: update the code to test SNMPDetailInner
        expect(instance).to.be.a(OcsInventoryRestApi.SNMPDetailInner);
      });

      it('should have the property defaultAddressIP (base name: "DefaultAddressIP")', function() {
        // TODO: update the code to test the property defaultAddressIP
        expect(instance).to.have.property('defaultAddressIP');
        // expect(instance.defaultAddressIP).to.be(expectedValueLiteral);
      });

      it('should have the property defaultDescription (base name: "DefaultDescription")', function() {
        // TODO: update the code to test the property defaultDescription
        expect(instance).to.have.property('defaultDescription');
        // expect(instance.defaultDescription).to.be(expectedValueLiteral);
      });

      it('should have the property defaultGateway (base name: "DefaultGateway")', function() {
        // TODO: update the code to test the property defaultGateway
        expect(instance).to.have.property('defaultGateway');
        // expect(instance.defaultGateway).to.be(expectedValueLiteral);
      });

      it('should have the property defaultLocation (base name: "DefaultLocation")', function() {
        // TODO: update the code to test the property defaultLocation
        expect(instance).to.have.property('defaultLocation');
        // expect(instance.defaultLocation).to.be(expectedValueLiteral);
      });

      it('should have the property defaultMacAddress (base name: "DefaultMacAddress")', function() {
        // TODO: update the code to test the property defaultMacAddress
        expect(instance).to.have.property('defaultMacAddress');
        // expect(instance.defaultMacAddress).to.be(expectedValueLiteral);
      });

      it('should have the property defaultName (base name: "DefaultName")', function() {
        // TODO: update the code to test the property defaultName
        expect(instance).to.have.property('defaultName');
        // expect(instance.defaultName).to.be(expectedValueLiteral);
      });

      it('should have the property defaultUptime (base name: "DefaultUptime")', function() {
        // TODO: update the code to test the property defaultUptime
        expect(instance).to.have.property('defaultUptime');
        // expect(instance.defaultUptime).to.be(expectedValueLiteral);
      });

      it('should have the property ID (base name: "ID")', function() {
        // TODO: update the code to test the property ID
        expect(instance).to.have.property('ID');
        // expect(instance.ID).to.be(expectedValueLiteral);
      });

      it('should have the property LASTDATE (base name: "LASTDATE")', function() {
        // TODO: update the code to test the property LASTDATE
        expect(instance).to.have.property('LASTDATE');
        // expect(instance.LASTDATE).to.be(expectedValueLiteral);
      });

    });
  });

}));
