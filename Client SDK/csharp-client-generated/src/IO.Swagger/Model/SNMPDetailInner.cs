/* 
 * OCS Inventory Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// SNMPDetailInner
    /// </summary>
    [DataContract]
        public partial class SNMPDetailInner :  IEquatable<SNMPDetailInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SNMPDetailInner" /> class.
        /// </summary>
        /// <param name="defaultAddressIP">defaultAddressIP.</param>
        /// <param name="defaultDescription">defaultDescription.</param>
        /// <param name="defaultGateway">defaultGateway.</param>
        /// <param name="defaultLocation">defaultLocation.</param>
        /// <param name="defaultMacAddress">defaultMacAddress.</param>
        /// <param name="defaultName">defaultName.</param>
        /// <param name="defaultUptime">defaultUptime.</param>
        /// <param name="iD">iD.</param>
        /// <param name="lASTDATE">lASTDATE.</param>
        public SNMPDetailInner(string defaultAddressIP = default(string), string defaultDescription = default(string), string defaultGateway = default(string), string defaultLocation = default(string), string defaultMacAddress = default(string), string defaultName = default(string), string defaultUptime = default(string), int? iD = default(int?), DateTime? lASTDATE = default(DateTime?))
        {
            this.DefaultAddressIP = defaultAddressIP;
            this.DefaultDescription = defaultDescription;
            this.DefaultGateway = defaultGateway;
            this.DefaultLocation = defaultLocation;
            this.DefaultMacAddress = defaultMacAddress;
            this.DefaultName = defaultName;
            this.DefaultUptime = defaultUptime;
            this.ID = iD;
            this.LASTDATE = lASTDATE;
        }
        
        /// <summary>
        /// Gets or Sets DefaultAddressIP
        /// </summary>
        [DataMember(Name="DefaultAddressIP", EmitDefaultValue=false)]
        public string DefaultAddressIP { get; set; }

        /// <summary>
        /// Gets or Sets DefaultDescription
        /// </summary>
        [DataMember(Name="DefaultDescription", EmitDefaultValue=false)]
        public string DefaultDescription { get; set; }

        /// <summary>
        /// Gets or Sets DefaultGateway
        /// </summary>
        [DataMember(Name="DefaultGateway", EmitDefaultValue=false)]
        public string DefaultGateway { get; set; }

        /// <summary>
        /// Gets or Sets DefaultLocation
        /// </summary>
        [DataMember(Name="DefaultLocation", EmitDefaultValue=false)]
        public string DefaultLocation { get; set; }

        /// <summary>
        /// Gets or Sets DefaultMacAddress
        /// </summary>
        [DataMember(Name="DefaultMacAddress", EmitDefaultValue=false)]
        public string DefaultMacAddress { get; set; }

        /// <summary>
        /// Gets or Sets DefaultName
        /// </summary>
        [DataMember(Name="DefaultName", EmitDefaultValue=false)]
        public string DefaultName { get; set; }

        /// <summary>
        /// Gets or Sets DefaultUptime
        /// </summary>
        [DataMember(Name="DefaultUptime", EmitDefaultValue=false)]
        public string DefaultUptime { get; set; }

        /// <summary>
        /// Gets or Sets ID
        /// </summary>
        [DataMember(Name="ID", EmitDefaultValue=false)]
        public int? ID { get; set; }

        /// <summary>
        /// Gets or Sets LASTDATE
        /// </summary>
        [DataMember(Name="LASTDATE", EmitDefaultValue=false)]
        public DateTime? LASTDATE { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SNMPDetailInner {\n");
            sb.Append("  DefaultAddressIP: ").Append(DefaultAddressIP).Append("\n");
            sb.Append("  DefaultDescription: ").Append(DefaultDescription).Append("\n");
            sb.Append("  DefaultGateway: ").Append(DefaultGateway).Append("\n");
            sb.Append("  DefaultLocation: ").Append(DefaultLocation).Append("\n");
            sb.Append("  DefaultMacAddress: ").Append(DefaultMacAddress).Append("\n");
            sb.Append("  DefaultName: ").Append(DefaultName).Append("\n");
            sb.Append("  DefaultUptime: ").Append(DefaultUptime).Append("\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  LASTDATE: ").Append(LASTDATE).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SNMPDetailInner);
        }

        /// <summary>
        /// Returns true if SNMPDetailInner instances are equal
        /// </summary>
        /// <param name="input">Instance of SNMPDetailInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SNMPDetailInner input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DefaultAddressIP == input.DefaultAddressIP ||
                    (this.DefaultAddressIP != null &&
                    this.DefaultAddressIP.Equals(input.DefaultAddressIP))
                ) && 
                (
                    this.DefaultDescription == input.DefaultDescription ||
                    (this.DefaultDescription != null &&
                    this.DefaultDescription.Equals(input.DefaultDescription))
                ) && 
                (
                    this.DefaultGateway == input.DefaultGateway ||
                    (this.DefaultGateway != null &&
                    this.DefaultGateway.Equals(input.DefaultGateway))
                ) && 
                (
                    this.DefaultLocation == input.DefaultLocation ||
                    (this.DefaultLocation != null &&
                    this.DefaultLocation.Equals(input.DefaultLocation))
                ) && 
                (
                    this.DefaultMacAddress == input.DefaultMacAddress ||
                    (this.DefaultMacAddress != null &&
                    this.DefaultMacAddress.Equals(input.DefaultMacAddress))
                ) && 
                (
                    this.DefaultName == input.DefaultName ||
                    (this.DefaultName != null &&
                    this.DefaultName.Equals(input.DefaultName))
                ) && 
                (
                    this.DefaultUptime == input.DefaultUptime ||
                    (this.DefaultUptime != null &&
                    this.DefaultUptime.Equals(input.DefaultUptime))
                ) && 
                (
                    this.ID == input.ID ||
                    (this.ID != null &&
                    this.ID.Equals(input.ID))
                ) && 
                (
                    this.LASTDATE == input.LASTDATE ||
                    (this.LASTDATE != null &&
                    this.LASTDATE.Equals(input.LASTDATE))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DefaultAddressIP != null)
                    hashCode = hashCode * 59 + this.DefaultAddressIP.GetHashCode();
                if (this.DefaultDescription != null)
                    hashCode = hashCode * 59 + this.DefaultDescription.GetHashCode();
                if (this.DefaultGateway != null)
                    hashCode = hashCode * 59 + this.DefaultGateway.GetHashCode();
                if (this.DefaultLocation != null)
                    hashCode = hashCode * 59 + this.DefaultLocation.GetHashCode();
                if (this.DefaultMacAddress != null)
                    hashCode = hashCode * 59 + this.DefaultMacAddress.GetHashCode();
                if (this.DefaultName != null)
                    hashCode = hashCode * 59 + this.DefaultName.GetHashCode();
                if (this.DefaultUptime != null)
                    hashCode = hashCode * 59 + this.DefaultUptime.GetHashCode();
                if (this.ID != null)
                    hashCode = hashCode * 59 + this.ID.GetHashCode();
                if (this.LASTDATE != null)
                    hashCode = hashCode * 59 + this.LASTDATE.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
