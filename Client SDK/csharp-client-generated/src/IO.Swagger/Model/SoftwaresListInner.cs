/* 
 * OCS Inventory Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// SoftwaresListInner
    /// </summary>
    [DataContract]
        public partial class SoftwaresListInner :  IEquatable<SoftwaresListInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SoftwaresListInner" /> class.
        /// </summary>
        /// <param name="nAME">nAME.</param>
        /// <param name="pUBLISHER">pUBLISHER.</param>
        /// <param name="vERSION">vERSION.</param>
        public SoftwaresListInner(string nAME = default(string), string pUBLISHER = default(string), string vERSION = default(string))
        {
            this.NAME = nAME;
            this.PUBLISHER = pUBLISHER;
            this.VERSION = vERSION;
        }
        
        /// <summary>
        /// Gets or Sets NAME
        /// </summary>
        [DataMember(Name="NAME", EmitDefaultValue=false)]
        public string NAME { get; set; }

        /// <summary>
        /// Gets or Sets PUBLISHER
        /// </summary>
        [DataMember(Name="PUBLISHER", EmitDefaultValue=false)]
        public string PUBLISHER { get; set; }

        /// <summary>
        /// Gets or Sets VERSION
        /// </summary>
        [DataMember(Name="VERSION", EmitDefaultValue=false)]
        public string VERSION { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SoftwaresListInner {\n");
            sb.Append("  NAME: ").Append(NAME).Append("\n");
            sb.Append("  PUBLISHER: ").Append(PUBLISHER).Append("\n");
            sb.Append("  VERSION: ").Append(VERSION).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SoftwaresListInner);
        }

        /// <summary>
        /// Returns true if SoftwaresListInner instances are equal
        /// </summary>
        /// <param name="input">Instance of SoftwaresListInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SoftwaresListInner input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NAME == input.NAME ||
                    (this.NAME != null &&
                    this.NAME.Equals(input.NAME))
                ) && 
                (
                    this.PUBLISHER == input.PUBLISHER ||
                    (this.PUBLISHER != null &&
                    this.PUBLISHER.Equals(input.PUBLISHER))
                ) && 
                (
                    this.VERSION == input.VERSION ||
                    (this.VERSION != null &&
                    this.VERSION.Equals(input.VERSION))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NAME != null)
                    hashCode = hashCode * 59 + this.NAME.GetHashCode();
                if (this.PUBLISHER != null)
                    hashCode = hashCode * 59 + this.PUBLISHER.GetHashCode();
                if (this.VERSION != null)
                    hashCode = hashCode * 59 + this.VERSION.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
