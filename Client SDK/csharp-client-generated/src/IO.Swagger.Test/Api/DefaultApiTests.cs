/* 
 * OCS Inventory Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DefaultApi
            //Assert.IsInstanceOfType(typeof(DefaultApi), instance, "instance is a DefaultApi");
        }

        /// <summary>
        /// Test ComputerIdGet
        /// </summary>
        [Test]
        public void ComputerIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.ComputerIdGet(id);
            //Assert.IsInstanceOf<ComputersList> (response, "response is ComputersList");
        }
        /// <summary>
        /// Test ComputerIdSectionsGet
        /// </summary>
        [Test]
        public void ComputerIdSectionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //string sections = null;
            //string where = null;
            //string _operator = null;
            //var response = instance.ComputerIdSectionsGet(id, sections, where, _operator);
            //Assert.IsInstanceOf<ComputerDetail> (response, "response is ComputerDetail");
        }
        /// <summary>
        /// Test ComputersGet
        /// </summary>
        [Test]
        public void ComputersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? limit = null;
            //var response = instance.ComputersGet(start, limit);
            //Assert.IsInstanceOf<List<ComputersList>> (response, "response is List<ComputersList>");
        }
        /// <summary>
        /// Test ComputersLastupdateTimestampGet
        /// </summary>
        [Test]
        public void ComputersLastupdateTimestampGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? timestamp = null;
            //var response = instance.ComputersLastupdateTimestampGet(timestamp);
            //Assert.IsInstanceOf<List<ListOfID>> (response, "response is List<ListOfID>");
        }
        /// <summary>
        /// Test ComputersListIDGet
        /// </summary>
        [Test]
        public void ComputersListIDGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? limit = null;
            //var response = instance.ComputersListIDGet(start, limit);
            //Assert.IsInstanceOf<List<ListOfID>> (response, "response is List<ListOfID>");
        }
        /// <summary>
        /// Test IpdiscoverGet
        /// </summary>
        [Test]
        public void IpdiscoverGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? limit = null;
            //var response = instance.IpdiscoverGet(start, limit);
            //Assert.IsInstanceOf<IpdiscoverList> (response, "response is IpdiscoverList");
        }
        /// <summary>
        /// Test IpdiscoverNetworkNetidGet
        /// </summary>
        [Test]
        public void IpdiscoverNetworkNetidGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? netid = null;
            //var response = instance.IpdiscoverNetworkNetidGet(netid);
            //Assert.IsInstanceOf<IpdiscoverNetdevices> (response, "response is IpdiscoverNetdevices");
        }
        /// <summary>
        /// Test SnmpSnmpTypeGet
        /// </summary>
        [Test]
        public void SnmpSnmpTypeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string snmpType = null;
            //int? start = null;
            //int? limit = null;
            //var response = instance.SnmpSnmpTypeGet(snmpType, start, limit);
            //Assert.IsInstanceOf<SNMPDetail> (response, "response is SNMPDetail");
        }
        /// <summary>
        /// Test SnmpSnmpTypeIdGet
        /// </summary>
        [Test]
        public void SnmpSnmpTypeIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string snmpType = null;
            //int? id = null;
            //var response = instance.SnmpSnmpTypeIdGet(snmpType, id);
            //Assert.IsInstanceOf<SNMPDetail> (response, "response is SNMPDetail");
        }
        /// <summary>
        /// Test SnmpsTypeListGet
        /// </summary>
        [Test]
        public void SnmpsTypeListGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.SnmpsTypeListGet();
            //Assert.IsInstanceOf<SNMPType> (response, "response is SNMPType");
        }
        /// <summary>
        /// Test SoftwaresGet
        /// </summary>
        [Test]
        public void SoftwaresGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? start = null;
            //int? limit = null;
            //string soft = null;
            //var response = instance.SoftwaresGet(start, limit, soft);
            //Assert.IsInstanceOf<SoftwaresList> (response, "response is SoftwaresList");
        }
    }

}
