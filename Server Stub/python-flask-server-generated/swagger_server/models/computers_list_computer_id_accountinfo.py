# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ComputersListComputerIdAccountinfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, hardware_id: int=None, tag: str=None):  # noqa: E501
        """ComputersListComputerIdAccountinfo - a model defined in Swagger

        :param hardware_id: The hardware_id of this ComputersListComputerIdAccountinfo.  # noqa: E501
        :type hardware_id: int
        :param tag: The tag of this ComputersListComputerIdAccountinfo.  # noqa: E501
        :type tag: str
        """
        self.swagger_types = {
            'hardware_id': int,
            'tag': str
        }

        self.attribute_map = {
            'hardware_id': 'HARDWARE_ID',
            'tag': 'TAG'
        }
        self._hardware_id = hardware_id
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt) -> 'ComputersListComputerIdAccountinfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The computersList_computer_id_accountinfo of this ComputersListComputerIdAccountinfo.  # noqa: E501
        :rtype: ComputersListComputerIdAccountinfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hardware_id(self) -> int:
        """Gets the hardware_id of this ComputersListComputerIdAccountinfo.


        :return: The hardware_id of this ComputersListComputerIdAccountinfo.
        :rtype: int
        """
        return self._hardware_id

    @hardware_id.setter
    def hardware_id(self, hardware_id: int):
        """Sets the hardware_id of this ComputersListComputerIdAccountinfo.


        :param hardware_id: The hardware_id of this ComputersListComputerIdAccountinfo.
        :type hardware_id: int
        """

        self._hardware_id = hardware_id

    @property
    def tag(self) -> str:
        """Gets the tag of this ComputersListComputerIdAccountinfo.


        :return: The tag of this ComputersListComputerIdAccountinfo.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag: str):
        """Sets the tag of this ComputersListComputerIdAccountinfo.


        :param tag: The tag of this ComputersListComputerIdAccountinfo.
        :type tag: str
        """

        self._tag = tag
