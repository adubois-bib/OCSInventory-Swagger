# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ComputersListComputerIdBios(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, assettag: str=None, bdate: str=None, bmanufacturer: str=None, bversion: str=None, hardware_id: int=None, mmanufacturer: str=None, mmodel: str=None, msn: str=None, smanufacturer: str=None, smodel: str=None, ssn: str=None, type: str=None):  # noqa: E501
        """ComputersListComputerIdBios - a model defined in Swagger

        :param assettag: The assettag of this ComputersListComputerIdBios.  # noqa: E501
        :type assettag: str
        :param bdate: The bdate of this ComputersListComputerIdBios.  # noqa: E501
        :type bdate: str
        :param bmanufacturer: The bmanufacturer of this ComputersListComputerIdBios.  # noqa: E501
        :type bmanufacturer: str
        :param bversion: The bversion of this ComputersListComputerIdBios.  # noqa: E501
        :type bversion: str
        :param hardware_id: The hardware_id of this ComputersListComputerIdBios.  # noqa: E501
        :type hardware_id: int
        :param mmanufacturer: The mmanufacturer of this ComputersListComputerIdBios.  # noqa: E501
        :type mmanufacturer: str
        :param mmodel: The mmodel of this ComputersListComputerIdBios.  # noqa: E501
        :type mmodel: str
        :param msn: The msn of this ComputersListComputerIdBios.  # noqa: E501
        :type msn: str
        :param smanufacturer: The smanufacturer of this ComputersListComputerIdBios.  # noqa: E501
        :type smanufacturer: str
        :param smodel: The smodel of this ComputersListComputerIdBios.  # noqa: E501
        :type smodel: str
        :param ssn: The ssn of this ComputersListComputerIdBios.  # noqa: E501
        :type ssn: str
        :param type: The type of this ComputersListComputerIdBios.  # noqa: E501
        :type type: str
        """
        self.swagger_types = {
            'assettag': str,
            'bdate': str,
            'bmanufacturer': str,
            'bversion': str,
            'hardware_id': int,
            'mmanufacturer': str,
            'mmodel': str,
            'msn': str,
            'smanufacturer': str,
            'smodel': str,
            'ssn': str,
            'type': str
        }

        self.attribute_map = {
            'assettag': 'ASSETTAG',
            'bdate': 'BDATE',
            'bmanufacturer': 'BMANUFACTURER',
            'bversion': 'BVERSION',
            'hardware_id': 'HARDWARE_ID',
            'mmanufacturer': 'MMANUFACTURER',
            'mmodel': 'MMODEL',
            'msn': 'MSN',
            'smanufacturer': 'SMANUFACTURER',
            'smodel': 'SMODEL',
            'ssn': 'SSN',
            'type': 'TYPE'
        }
        self._assettag = assettag
        self._bdate = bdate
        self._bmanufacturer = bmanufacturer
        self._bversion = bversion
        self._hardware_id = hardware_id
        self._mmanufacturer = mmanufacturer
        self._mmodel = mmodel
        self._msn = msn
        self._smanufacturer = smanufacturer
        self._smodel = smodel
        self._ssn = ssn
        self._type = type

    @classmethod
    def from_dict(cls, dikt) -> 'ComputersListComputerIdBios':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The computersList_computer_id_bios of this ComputersListComputerIdBios.  # noqa: E501
        :rtype: ComputersListComputerIdBios
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assettag(self) -> str:
        """Gets the assettag of this ComputersListComputerIdBios.


        :return: The assettag of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._assettag

    @assettag.setter
    def assettag(self, assettag: str):
        """Sets the assettag of this ComputersListComputerIdBios.


        :param assettag: The assettag of this ComputersListComputerIdBios.
        :type assettag: str
        """

        self._assettag = assettag

    @property
    def bdate(self) -> str:
        """Gets the bdate of this ComputersListComputerIdBios.


        :return: The bdate of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._bdate

    @bdate.setter
    def bdate(self, bdate: str):
        """Sets the bdate of this ComputersListComputerIdBios.


        :param bdate: The bdate of this ComputersListComputerIdBios.
        :type bdate: str
        """

        self._bdate = bdate

    @property
    def bmanufacturer(self) -> str:
        """Gets the bmanufacturer of this ComputersListComputerIdBios.


        :return: The bmanufacturer of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._bmanufacturer

    @bmanufacturer.setter
    def bmanufacturer(self, bmanufacturer: str):
        """Sets the bmanufacturer of this ComputersListComputerIdBios.


        :param bmanufacturer: The bmanufacturer of this ComputersListComputerIdBios.
        :type bmanufacturer: str
        """

        self._bmanufacturer = bmanufacturer

    @property
    def bversion(self) -> str:
        """Gets the bversion of this ComputersListComputerIdBios.


        :return: The bversion of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._bversion

    @bversion.setter
    def bversion(self, bversion: str):
        """Sets the bversion of this ComputersListComputerIdBios.


        :param bversion: The bversion of this ComputersListComputerIdBios.
        :type bversion: str
        """

        self._bversion = bversion

    @property
    def hardware_id(self) -> int:
        """Gets the hardware_id of this ComputersListComputerIdBios.


        :return: The hardware_id of this ComputersListComputerIdBios.
        :rtype: int
        """
        return self._hardware_id

    @hardware_id.setter
    def hardware_id(self, hardware_id: int):
        """Sets the hardware_id of this ComputersListComputerIdBios.


        :param hardware_id: The hardware_id of this ComputersListComputerIdBios.
        :type hardware_id: int
        """

        self._hardware_id = hardware_id

    @property
    def mmanufacturer(self) -> str:
        """Gets the mmanufacturer of this ComputersListComputerIdBios.


        :return: The mmanufacturer of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._mmanufacturer

    @mmanufacturer.setter
    def mmanufacturer(self, mmanufacturer: str):
        """Sets the mmanufacturer of this ComputersListComputerIdBios.


        :param mmanufacturer: The mmanufacturer of this ComputersListComputerIdBios.
        :type mmanufacturer: str
        """

        self._mmanufacturer = mmanufacturer

    @property
    def mmodel(self) -> str:
        """Gets the mmodel of this ComputersListComputerIdBios.


        :return: The mmodel of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._mmodel

    @mmodel.setter
    def mmodel(self, mmodel: str):
        """Sets the mmodel of this ComputersListComputerIdBios.


        :param mmodel: The mmodel of this ComputersListComputerIdBios.
        :type mmodel: str
        """

        self._mmodel = mmodel

    @property
    def msn(self) -> str:
        """Gets the msn of this ComputersListComputerIdBios.


        :return: The msn of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._msn

    @msn.setter
    def msn(self, msn: str):
        """Sets the msn of this ComputersListComputerIdBios.


        :param msn: The msn of this ComputersListComputerIdBios.
        :type msn: str
        """

        self._msn = msn

    @property
    def smanufacturer(self) -> str:
        """Gets the smanufacturer of this ComputersListComputerIdBios.


        :return: The smanufacturer of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._smanufacturer

    @smanufacturer.setter
    def smanufacturer(self, smanufacturer: str):
        """Sets the smanufacturer of this ComputersListComputerIdBios.


        :param smanufacturer: The smanufacturer of this ComputersListComputerIdBios.
        :type smanufacturer: str
        """

        self._smanufacturer = smanufacturer

    @property
    def smodel(self) -> str:
        """Gets the smodel of this ComputersListComputerIdBios.


        :return: The smodel of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._smodel

    @smodel.setter
    def smodel(self, smodel: str):
        """Sets the smodel of this ComputersListComputerIdBios.


        :param smodel: The smodel of this ComputersListComputerIdBios.
        :type smodel: str
        """

        self._smodel = smodel

    @property
    def ssn(self) -> str:
        """Gets the ssn of this ComputersListComputerIdBios.


        :return: The ssn of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._ssn

    @ssn.setter
    def ssn(self, ssn: str):
        """Sets the ssn of this ComputersListComputerIdBios.


        :param ssn: The ssn of this ComputersListComputerIdBios.
        :type ssn: str
        """

        self._ssn = ssn

    @property
    def type(self) -> str:
        """Gets the type of this ComputersListComputerIdBios.


        :return: The type of this ComputersListComputerIdBios.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this ComputersListComputerIdBios.


        :param type: The type of this ComputersListComputerIdBios.
        :type type: str
        """

        self._type = type
