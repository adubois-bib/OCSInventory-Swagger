# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SNMPTypeInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, table_type_name: str=None, type_name: str=None):  # noqa: E501
        """SNMPTypeInner - a model defined in Swagger

        :param id: The id of this SNMPTypeInner.  # noqa: E501
        :type id: int
        :param table_type_name: The table_type_name of this SNMPTypeInner.  # noqa: E501
        :type table_type_name: str
        :param type_name: The type_name of this SNMPTypeInner.  # noqa: E501
        :type type_name: str
        """
        self.swagger_types = {
            'id': int,
            'table_type_name': str,
            'type_name': str
        }

        self.attribute_map = {
            'id': 'ID',
            'table_type_name': 'TABLE_TYPE_NAME',
            'type_name': 'TYPE_NAME'
        }
        self._id = id
        self._table_type_name = table_type_name
        self._type_name = type_name

    @classmethod
    def from_dict(cls, dikt) -> 'SNMPTypeInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SNMPType_inner of this SNMPTypeInner.  # noqa: E501
        :rtype: SNMPTypeInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this SNMPTypeInner.


        :return: The id of this SNMPTypeInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this SNMPTypeInner.


        :param id: The id of this SNMPTypeInner.
        :type id: int
        """

        self._id = id

    @property
    def table_type_name(self) -> str:
        """Gets the table_type_name of this SNMPTypeInner.


        :return: The table_type_name of this SNMPTypeInner.
        :rtype: str
        """
        return self._table_type_name

    @table_type_name.setter
    def table_type_name(self, table_type_name: str):
        """Sets the table_type_name of this SNMPTypeInner.


        :param table_type_name: The table_type_name of this SNMPTypeInner.
        :type table_type_name: str
        """

        self._table_type_name = table_type_name

    @property
    def type_name(self) -> str:
        """Gets the type_name of this SNMPTypeInner.


        :return: The type_name of this SNMPTypeInner.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name: str):
        """Sets the type_name of this SNMPTypeInner.


        :param type_name: The type_name of this SNMPTypeInner.
        :type type_name: str
        """

        self._type_name = type_name
