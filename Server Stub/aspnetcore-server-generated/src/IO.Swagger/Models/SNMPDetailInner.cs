/*
 * OCS Inventory Rest API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SNMPDetailInner : IEquatable<SNMPDetailInner>
    { 
        /// <summary>
        /// Gets or Sets DefaultAddressIP
        /// </summary>

        [DataMember(Name="DefaultAddressIP")]
        public string DefaultAddressIP { get; set; }

        /// <summary>
        /// Gets or Sets DefaultDescription
        /// </summary>

        [DataMember(Name="DefaultDescription")]
        public string DefaultDescription { get; set; }

        /// <summary>
        /// Gets or Sets DefaultGateway
        /// </summary>

        [DataMember(Name="DefaultGateway")]
        public string DefaultGateway { get; set; }

        /// <summary>
        /// Gets or Sets DefaultLocation
        /// </summary>

        [DataMember(Name="DefaultLocation")]
        public string DefaultLocation { get; set; }

        /// <summary>
        /// Gets or Sets DefaultMacAddress
        /// </summary>

        [DataMember(Name="DefaultMacAddress")]
        public string DefaultMacAddress { get; set; }

        /// <summary>
        /// Gets or Sets DefaultName
        /// </summary>

        [DataMember(Name="DefaultName")]
        public string DefaultName { get; set; }

        /// <summary>
        /// Gets or Sets DefaultUptime
        /// </summary>

        [DataMember(Name="DefaultUptime")]
        public string DefaultUptime { get; set; }

        /// <summary>
        /// Gets or Sets ID
        /// </summary>

        [DataMember(Name="ID")]
        public int? ID { get; set; }

        /// <summary>
        /// Gets or Sets LASTDATE
        /// </summary>

        [DataMember(Name="LASTDATE")]
        public DateTime? LASTDATE { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SNMPDetailInner {\n");
            sb.Append("  DefaultAddressIP: ").Append(DefaultAddressIP).Append("\n");
            sb.Append("  DefaultDescription: ").Append(DefaultDescription).Append("\n");
            sb.Append("  DefaultGateway: ").Append(DefaultGateway).Append("\n");
            sb.Append("  DefaultLocation: ").Append(DefaultLocation).Append("\n");
            sb.Append("  DefaultMacAddress: ").Append(DefaultMacAddress).Append("\n");
            sb.Append("  DefaultName: ").Append(DefaultName).Append("\n");
            sb.Append("  DefaultUptime: ").Append(DefaultUptime).Append("\n");
            sb.Append("  ID: ").Append(ID).Append("\n");
            sb.Append("  LASTDATE: ").Append(LASTDATE).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((SNMPDetailInner)obj);
        }

        /// <summary>
        /// Returns true if SNMPDetailInner instances are equal
        /// </summary>
        /// <param name="other">Instance of SNMPDetailInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SNMPDetailInner other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    DefaultAddressIP == other.DefaultAddressIP ||
                    DefaultAddressIP != null &&
                    DefaultAddressIP.Equals(other.DefaultAddressIP)
                ) && 
                (
                    DefaultDescription == other.DefaultDescription ||
                    DefaultDescription != null &&
                    DefaultDescription.Equals(other.DefaultDescription)
                ) && 
                (
                    DefaultGateway == other.DefaultGateway ||
                    DefaultGateway != null &&
                    DefaultGateway.Equals(other.DefaultGateway)
                ) && 
                (
                    DefaultLocation == other.DefaultLocation ||
                    DefaultLocation != null &&
                    DefaultLocation.Equals(other.DefaultLocation)
                ) && 
                (
                    DefaultMacAddress == other.DefaultMacAddress ||
                    DefaultMacAddress != null &&
                    DefaultMacAddress.Equals(other.DefaultMacAddress)
                ) && 
                (
                    DefaultName == other.DefaultName ||
                    DefaultName != null &&
                    DefaultName.Equals(other.DefaultName)
                ) && 
                (
                    DefaultUptime == other.DefaultUptime ||
                    DefaultUptime != null &&
                    DefaultUptime.Equals(other.DefaultUptime)
                ) && 
                (
                    ID == other.ID ||
                    ID != null &&
                    ID.Equals(other.ID)
                ) && 
                (
                    LASTDATE == other.LASTDATE ||
                    LASTDATE != null &&
                    LASTDATE.Equals(other.LASTDATE)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (DefaultAddressIP != null)
                    hashCode = hashCode * 59 + DefaultAddressIP.GetHashCode();
                    if (DefaultDescription != null)
                    hashCode = hashCode * 59 + DefaultDescription.GetHashCode();
                    if (DefaultGateway != null)
                    hashCode = hashCode * 59 + DefaultGateway.GetHashCode();
                    if (DefaultLocation != null)
                    hashCode = hashCode * 59 + DefaultLocation.GetHashCode();
                    if (DefaultMacAddress != null)
                    hashCode = hashCode * 59 + DefaultMacAddress.GetHashCode();
                    if (DefaultName != null)
                    hashCode = hashCode * 59 + DefaultName.GetHashCode();
                    if (DefaultUptime != null)
                    hashCode = hashCode * 59 + DefaultUptime.GetHashCode();
                    if (ID != null)
                    hashCode = hashCode * 59 + ID.GetHashCode();
                    if (LASTDATE != null)
                    hashCode = hashCode * 59 + LASTDATE.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(SNMPDetailInner left, SNMPDetailInner right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SNMPDetailInner left, SNMPDetailInner right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
