/**
 * OCS Inventory Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.api;

import io.swagger.model.ComputerDetail;
import io.swagger.model.ComputersList;
import io.swagger.model.IpdiscoverList;
import io.swagger.model.IpdiscoverNetdevices;
import io.swagger.model.ListOfID;
import io.swagger.model.SNMPDetail;
import io.swagger.model.SNMPType;
import io.swagger.model.SoftwaresList;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * OCS Inventory Rest API
 *
 * <p>No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API tests for DefaultApi 
 */
public class DefaultApiTest {


    private DefaultApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://api.ocsinventory-ng.tld/ocsapi/v1", DefaultApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    /**
     * Get a computer by its ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computerIdGetTest() {
        Integer id = null;
        //ComputersList response = api.computerIdGet(id);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get sections informations of a specific computer
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computerIdSectionsGetTest() {
        Integer id = null;
        String sections = null;
        String where = null;
        String operator = null;
        //ComputerDetail response = api.computerIdSectionsGet(id, sections, where, operator);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get a list of computers with its detail
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computersGetTest() {
        Integer start = null;
        Integer limit = null;
        //List<ComputersList> response = api.computersGet(start, limit);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get a ID list of computers update during the provided timestamp
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computersLastupdateTimestampGetTest() {
        Integer timestamp = null;
        //List<ListOfID> response = api.computersLastupdateTimestampGet(timestamp);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get a ID list of all computers in the OCS database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void computersListIDGetTest() {
        Integer start = null;
        Integer limit = null;
        //List<ListOfID> response = api.computersListIDGet(start, limit);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * List IPDiscover network list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ipdiscoverGetTest() {
        Integer start = null;
        Integer limit = null;
        //IpdiscoverList response = api.ipdiscoverGet(start, limit);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get list of network devices scanned on one network
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void ipdiscoverNetworkNetidGetTest() {
        Integer netid = null;
        //IpdiscoverNetdevices response = api.ipdiscoverNetworkNetidGet(netid);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get snmp device list of a specific snmp type
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void snmpSnmpTypeGetTest() {
        String snmpType = null;
        Integer start = null;
        Integer limit = null;
        //SNMPDetail response = api.snmpSnmpTypeGet(snmpType, start, limit);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get a device from a snmp type with its ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void snmpSnmpTypeIdGetTest() {
        String snmpType = null;
        Integer id = null;
        //SNMPDetail response = api.snmpSnmpTypeIdGet(snmpType, id);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get a SNMP type list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void snmpsTypeListGetTest() {
        //SNMPType response = api.snmpsTypeListGet();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * Get software list from database
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void softwaresGetTest() {
        Integer start = null;
        Integer limit = null;
        String soft = null;
        //SoftwaresList response = api.softwaresGet(start, limit, soft);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
}
